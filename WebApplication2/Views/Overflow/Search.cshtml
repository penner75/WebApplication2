@{
    ViewData["Title"] = "Search Results for";
    var Items = ViewData["Items"] as List<Item>;
}

@functions {
    public String getDate(int seconds)
    {
        DateTimeOffset offset = DateTimeOffset.FromUnixTimeSeconds(seconds);

        return offset.UtcDateTime.ToString();
    }
}
<style>
    .comment {
        font-size: 13px;
        left: 40px;
        border-width: 1px;
        max-width: 50%;
    }

    .answer {
    }

    hr {
        border: solid 1px black;
        width: 96%;
        color: #FFFF00;
        height: 1px;
    }


    /* Style the button that is used to open and close the collapsible content */
    .collapsible {
        background-color: #eee;
        color: #444;
        cursor: pointer;
        padding: 18px;
        width: 100%;
        border: none;
        text-align: left;
        outline: none;
        font-size: 15px;
    }

        /* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */
        .active, .collapsible:hover {
            background-color: #ccc;
        }

    /* Style the collapsible content. Note: hidden by default */
    .content {
        padding: 0 18px;
        display: none;
        overflow: hidden;
        background-color: #f1f1f1;
    }
</style>

<script type="text/javascript">
    function collapsible(title) {
        var content = document.getElementById(title);
        console.log("hhello");
        if (content.style.display === "block") {
            content.style.display = "none";
        } else {
            content.style.display = "block";
        }
    }
</script>


<form action="Search">
    <input type="text" name="tag" />
    <input type="submit" value="Search Tag" />
</form>
<h1>Tag:@ViewData["tag"]</h1>

@if (Items != null)
{
    @foreach (var item in Items)
    {
        <p>Title: @Html.Raw(item.title)</p>
        <p>Votes: @item.score</p>
        <p>Creation Date: @getDate(item.creation_date)</p>
        <input type="button" class="collapsible" onclick="collapsible('@item.title')" />
        <div id="@item.title" class="content">
            <p>@Html.Raw(item.body)</p>

            @if (item.comments != null)
            {
                <h4>Comments</h4>
                @foreach (var comment in item.comments)
                {

                    <div class="comment">
                        <p> @Html.Raw(comment.body)</p>
                        <p>Score :@comment.score Date: @getDate(comment.creation_date)</p>
                        <hr />
                    </div>
                }
            }
            @if (item.answers != null)
            {
                @foreach (var answer in item.answers)
                {

                    <div class="answer">
                        <h3>Answer</h3>
                        <p>Score:@answer.score @Html.Raw(answer.body)</p>
                        <p>@getDate(answer.creation_date)</p>
                    </div>
                    @if (answer.comments != null)
                    {
                        <h4>Comments</h4>
                        @foreach (var answerComment in answer.comments)
                        {

                            <div class="comment">
                                <p> @Html.Raw(answerComment.body)</p>
                                <p>Score: @answerComment.score @getDate(answerComment.creation_date)</p>
                                <hr />
                            </div>
                        }
                    }

                }
            }

        </div>
    }
}

